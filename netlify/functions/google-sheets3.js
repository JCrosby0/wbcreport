// https://www.npmjs.com/package/google-spreadsheet
const { GoogleSpreadsheet } = require("google-spreadsheet");

/** function to return from netlify function with appropriate payload */
function returnFunction(err = null, payload) {
  if (err) {
    console.log("[500] returning error:");
    console.log(err);
    return {
      statusCode: 500,
      body: JSON.stringify({
        message: err,
      }),
    };
  }
  console.log("[200] Returning payload:");
  console.log(JSON.stringify(payload));
  return {
    statusCode: 200,
    body: JSON.stringify({
      message: payload,
    }),
  };
}

exports.handler = async (event) => {
  const spreadsheetId = "1-Dv7yxqmUi9XSfHylF0IChUyRIMiGUEcwjY2NqN20h4";
  const doc = new GoogleSpreadsheet(spreadsheetId);

  await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
    private_key: process.env.GOOGLE_PRIVATE_KEY,
  });

  await doc.loadInfo(); // loads document properties and worksheets

  const sheet = doc.sheetsByIndex[0];
  // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
  const mySheet = {
    sheetId: sheet.sheetId,
    title: sheet.title,
    index: sheet.index,
  };
  const colHeadings = [
    "Sport",
    "Members",
    "TotalOwed",
    "TotalReceived",
    "TotalOutstanding",
    "Registered",
    "RegistrationsOutstanding",
  ];
  // read rows
  const rows = await sheet.getRows(); // can pass in { limit, offset }
  const myRows = rows.map((row) => {
    const returnObj = {};
    colHeadings.forEach((heading) => {
      console.log("heading: ", heading);
      console.log("row[heading]: ", row[heading]);
      Object.assign(returnObj, { [heading]: row[heading] });
      console.log("returnObj: ", returnObj);
    });
    return returnObj;
  });
  console.log("myRows: ", myRows);

  // add Row
  await sheet.addRow({
    Sport: "Dodgeball",
    Members: 21,
    TotalOwed: 22,
    TotalReceived: 23,
    TotalOutstanding: 24,
    Registered: 25,
    RegistrationsOutstanding: 26,
  });

  const cells = await sheet.loadCells("A1:G4");
  // console.log("rows: ", rows);
  console.log("cells: ", cells);
  console.log("cell stats: ", sheet.cellStats);
  const myCells = { cells, stats: sheet.cellStats };
  const responseObject = { mySheet, myRows, myCells };

  return returnFunction(null, responseObject);
};
